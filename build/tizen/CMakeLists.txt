CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(dali2-addons-example CXX)
SET(CMAKE_CXX_STANDARD 14)

SET(dali2-addons-example_VERSION_MAJOR 1)
SET(dali2-addons-example_VERSION_MINOR 0)

SET(ROOT_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../..)
GET_FILENAME_COMPONENT(ROOT_SRC_DIR ${ROOT_SRC_DIR} ABSOLUTE) # Make sure the path is absolute

# Ubuntu
IF( DEFINED ENV{DESKTOP_PREFIX} )
    SET( PREFIX $ENV{DESKTOP_PREFIX} )
ENDIF()

# Set up the lib dir
SET( LIB_DIR $ENV{libdir} )
IF( NOT LIB_DIR )
    SET( LIB_DIR ${CMAKE_INSTALL_LIBDIR} )
ENDIF()
IF( NOT LIB_DIR )
    SET( LIB_DIR ${PREFIX}/lib )
ENDIF()

# Dependency Checks
SET(PKG_LIST dali2-core
             dali2-adaptor
             dali2-toolkit)

INCLUDE(FindPkgConfig)

PKG_CHECK_MODULES(REQUIRED_PKGS REQUIRED ${PKG_LIST})

FOREACH(flag ${REQUIRED_PKGS_CFLAGS})
  SET(REQUIRED_CFLAGS "${REQUIRED_CFLAGS} ${flag}")
ENDFOREACH(flag)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${REQUIRED_CFLAGS} -Werror -Wall -fPIC ")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_C_FLAGS} ")

# Find DALi sources (installed from tizen packages)
IF(DEFINED ENV{DALI_ADDON_INTERNAL} )
    SET(DALI_DEBUG_SOURCE_DIR $ENV{DALI_ADDON_INTERNAL})
ELSE()
    SET(DALI_DEBUG_SOURCE_DIR /usr/src/debug)
ENDIF()
FILE(GLOB SOURCE_DEPS ${DALI_DEBUG_SOURCE_DIR}/dali2-* )

FOREACH( SOURCE_DIR IN ITEMS ${SOURCE_DEPS} )
    SET( DALI_HEADERS ${DALI_HEADERS} ${SOURCE_DIR})
ENDFOREACH()

MESSAGE(STATUS "INCLUDE HEADERS: ${DALI_HEADERS}")

# Setup for dali-example
SET(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../dali)

# look for addons cmake files
FILE(GLOB_RECURSE FILES ${ROOT_DIR}/*/*.cmake)

SET( PUBLIC_DALI_HEADERS $ENV{DESKTOP_PREFIX}/include )
SET( PRIVATE_DALI_HEADERS
        ${ROOT_DIR}/../../dali-core
        ${ROOT_DIR}/../../dali-adaptor
        ${ROOT_DIR}/../../dali-toolkit
        ${DALI_HEADERS}
        )

FOREACH( IN_CMAKE IN ITEMS ${FILES} )
    GET_FILENAME_COMPONENT( CURRENT_DIR ${IN_CMAKE} DIRECTORY )
    SET(ADDON_ENABLED 1)
    INCLUDE( ${IN_CMAKE} )
    IF( ADDON_ENABLED EQUAL 1 )
        ADD_LIBRARY( ${ADDON_NAME} SHARED ${SOURCES} )
        TARGET_INCLUDE_DIRECTORIES( ${ADDON_NAME} BEFORE
                PUBLIC
                ${PUBLIC_DALI_HEADERS}
                ${PRIVATE_DALI_HEADERS} )
        MESSAGE( STATUS "DIR: -L${PREFIX}/lib")
        TARGET_LINK_LIBRARIES( ${ADDON_NAME} -L${PREFIX}/lib -ldali2-core -ldali2-adaptor -ldali2-toolkit )
        MESSAGE( STATUS "${IN_CMAKE}")

        INSTALL( TARGETS ${ADDON_NAME} LIBRARY DESTINATION ${LIB_DIR})
    ENDIF()
ENDFOREACH()
